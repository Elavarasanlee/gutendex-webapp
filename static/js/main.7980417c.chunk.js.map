{"version":3,"sources":["component/searchTool.js","component/dramaBooks.js","component/humorBooks.js","component/books.js","component/politcsBooks.js","reducers/bookReducer.js","reducers/index.js","actions/types.js","store.js","component/homePage.js","actions/bookAction.js","component/philosophy.js","component/historyBooks.js","component/adventuresBooks.js","App.js","serviceWorker.js","index.js"],"names":["bookAddress","initialState","book","books","loading","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","filter","id","middleware","thunk","store","createStore","rootReducer","applyMiddleware","apply","HomePage","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","react_default","a","createElement","Container","maxWidth","className","CardContent","Grid","columns","Column","Card","style","height","width","react_router_dom","to","Button","variant","color","fullWidth","marginTop","Row","Component","SERVER_ADDR","SearchTool","props","_this","call","featchSearchResults","updatedpageno","query","searchURL","concat","axios","get","then","res","setState","result","data","results","catch","error","isCancel","message","handleOnInputChange","e","target","searchReq","searchData","renderSearchresult","keys","map","index","formats","stretched","Fragment","only","Paper","Image","src","href","title","cancle","getallBooks","TextField","name","label","margin","placeholder","onChange","InputLabelProps","shrink","marginLeft","onClick","connect","dispatch","err","response","count","DramaBooks","fetchMoreResult","console","log","urlLoad","moredata","renderMoreresult","i","getdramaBooks","bookList","mobile","searchTool","HumorBooks","gethumorBooks","Books","getFictionBooks","PoliticsBooks","getpolitcsBooks","PhilosophyBooks","getPhilosophyBooks","HistoryBooks","getHistoryBooks","AdventuresBooks","getAdventuresBooks","App","es","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7980417c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { SERVER_ADDR, getallBooks } from \"../actions/bookAction\";\n\nimport { connect } from \"react-redux\";\n\nimport \"./homepage.css\";\nimport { Container, Button } from \"@material-ui/core\";\nimport { Grid, Image } from \"semantic-ui-react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nvar bookAddress;\nexport class SearchTool extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      result: {},\n      loading: false,\n      message: \"\",\n      searchData: \"\"\n    };\n    this.cancle = \"\";\n  }\n  featchSearchResults = (updatedpageno, query) => {\n    const searchURL = `${SERVER_ADDR}/books?search=${\n      this.state.query\n    }%20great`;\n\n    axios\n      .get(searchURL)\n      .then(res => {\n        this.setState({ result: res.data.results });\n      })\n      .catch(error => {\n        if (axios.isCancel(error) || error) {\n          this.setState({ loading: false, message: \"failed to fetch\" });\n        }\n      });\n  };\n  handleOnInputChange = e => {\n    const query = e.target.value;\n    this.setState({ query: query, loading: true, message: \"\" });\n  };\n\n  searchReq = e => {\n    this.featchSearchResults(this.state.query);\n    if (this.state.result) {\n      this.setState({\n        searchData: this.state.result\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.props.getallBooks();\n  }\n  renderSearchresult = () => {\n    const { result } = this.state;\n    if (Object.keys(result).length && result.length) {\n      result.map((data, index) =>\n        data.formats[\"text/html; charset=utf-8\"]\n          ? (bookAddress = data.formats[\"text/html; charset=utf-8\"])\n          : data.formats[\"application/pdf\"]\n          ? (bookAddress = data.formats[\"application/pdf\"])\n          : data.formats[\"text/plain; charset=us-ascii\"]\n      );\n      return (\n        <Grid columns={6}>\n          <Grid.Row stretched>\n            {result.map((data, key) => {\n              return (\n                <React.Fragment key={key}>\n                  <Grid.Column only=\"computer\">\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"200px\", width: \"250px\" }}\n                        />\n                      ) : (\n                        \"Image NOT Available\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n                </React.Fragment>\n              );\n            })}\n          </Grid.Row>\n        </Grid>\n      );\n    }\n  };\n  render() {\n    const { query } = this.state;\n\n    return (\n      <Container>\n        <TextField\n          name=\"query\"\n          value={query}\n          id=\"outlined-full-width\"\n          label=\"Search by Book Title and Author Name\"\n          style={{ margin: 8 }}\n          placeholder=\"Placeholder\"\n          // helperText=\"Authors Name \"\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange={this.handleOnInputChange}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          style={{ marginLeft: \"9px\" }}\n          onClick={this.searchReq}\n        >\n          Search\n        </Button>\n        <br />\n        <br />\n        <br />\n        <br />\n        {this.renderSearchresult()}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  books: state.books\n});\n\nexport default connect(\n  mapStateToProps,\n  { getallBooks }\n)(SearchTool);\n","import React, { Component } from \"react\";\nimport { SERVER_ADDR, getdramaBooks } from \"../actions/bookAction\";\nimport { connect } from \"react-redux\";\n\nimport \"./homepage.css\";\nimport { Container, Button } from \"@material-ui/core\";\nimport { Grid, Image } from \"semantic-ui-react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SearchTool from \"./searchTool\";\nimport axios from \"axios\";\n\nvar count = 1;\nvar bookAddress;\nexport class DramaBooks extends Component {\n  constructor() {\n    super();\n    this.state = { books: [], moredata: {} };\n  }\n  componentDidMount() {\n    this.props.getdramaBooks();\n  }\n  searchReq = e => {\n    count += 1;\n    this.fetchMoreResult();\n    console.log(count);\n  };\n  fetchMoreResult = () => {\n    var urlLoad = `${SERVER_ADDR}/books?mime_type=image%2Fjpeg&page=${count}&topic=drama`;\n\n    axios\n      .get(urlLoad)\n      .then(res => {\n        this.setState({ moredata: res.data.results });\n      })\n      .catch(error => {\n        if (axios.isCancel(error) || error) {\n          this.setState({ loading: false, message: \"failed to fetch\" });\n        }\n      });\n  };\n  renderMoreresult = () => {\n    const { moredata } = this.state;\n    if (Object.keys(moredata).length && moredata.length) {\n      moredata.map((data, index) =>\n        data.formats[\"text/html; charset=utf-8\"]\n          ? (bookAddress = data.formats[\"text/html; charset=utf-8\"])\n          : data.formats[\"application/pdf\"]\n          ? (bookAddress = data.formats[\"application/pdf\"])\n          : data.formats[\"text/plain; charset=us-ascii\"]\n      );\n      return (\n        <Grid columns={6}>\n          <Grid.Row stretched>\n            {moredata.map((data, i) => {\n              return (\n                <React.Fragment key={i}>\n                  <Grid.Column only=\"computer\">\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"200px\", width: \"250px\" }}\n                        />\n                      ) : (\n                        \"Image NOT Available\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n                </React.Fragment>\n              );\n            })}\n          </Grid.Row>\n        </Grid>\n      );\n    }\n  };\n  render() {\n    const { books } = this.props.books;\n    var bookList;\n    var bookAddress;\n    if (books) {\n      if (books.results) {\n        if (books.results) {\n          books.results.map((data, index) =>\n            data.formats[\"text/html; charset=utf-8\"]\n              ? (bookAddress = data.formats[\"text/html; charset=utf-8\"])\n              : \"\"\n          );\n        }\n        bookList = (\n          <Grid columns={6}>\n            <Grid.Row stretched>\n              {books.results.map((data, index) => (\n                <React.Fragment key={index}>\n                  <Grid.Column only=\"computer\">\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"200px\", width: \"250px\" }}\n                        />\n                      ) : (\n                        \"NO\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n\n                  <Grid.Column only=\"mobile\" mobile={5}>\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"100px\", width: \"100px\" }}\n                        />\n                      ) : (\n                        \"NO\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n                </React.Fragment>\n              ))}\n              ;\n            </Grid.Row>\n          </Grid>\n        );\n      }\n    }\n\n    return (\n      <Container>\n        <SearchTool />\n        <h1>Drama</h1>\n        {bookList}\n        {this.renderMoreresult()}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          style={{ marginLeft: \"9px\" }}\n          onClick={this.searchReq}\n        >\n          Load More\n        </Button>\n        <br />\n        <br />\n        <br />\n        <br />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  books: state.books\n});\n\nexport default connect(\n  mapStateToProps,\n  { getdramaBooks }\n)(DramaBooks);\n","import React, { Component } from \"react\";\nimport { SERVER_ADDR, gethumorBooks } from \"../actions/bookAction\";\nimport { connect } from \"react-redux\";\n\nimport \"./homepage.css\";\nimport { Container, Button } from \"@material-ui/core\";\nimport { Grid, Image } from \"semantic-ui-react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SearchTool from \"./searchTool\";\nimport axios from \"axios\";\nvar count = 1;\nvar bookAddress;\nexport class HumorBooks extends Component {\n  constructor() {\n    super();\n    this.state = { books: [], moredata: {} };\n  }\n  componentDidMount() {\n    this.props.gethumorBooks();\n  }\n  searchReq = e => {\n    count += 1;\n    this.fetchMoreResult();\n    console.log(count);\n  };\n  fetchMoreResult = () => {\n    var urlLoad = `${SERVER_ADDR}/books?mime_type=image%2Fjpeg&page=${count}&topic=drama`;\n\n    axios\n      .get(urlLoad)\n      .then(res => {\n        this.setState({ moredata: res.data.results });\n      })\n      .catch(error => {\n        if (axios.isCancel(error) || error) {\n          this.setState({ loading: false, message: \"failed to fetch\" });\n        }\n      });\n  };\n  renderMoreresult = () => {\n    const { moredata } = this.state;\n    if (Object.keys(moredata).length && moredata.length) {\n      moredata.map((data, index) =>\n        data.formats[\"text/html; charset=utf-8\"]\n          ? (bookAddress = data.formats[\"text/html; charset=utf-8\"])\n          : data.formats[\"application/pdf\"]\n          ? (bookAddress = data.formats[\"application/pdf\"])\n          : data.formats[\"text/plain; charset=us-ascii\"]\n      );\n      return (\n        <Grid columns={6}>\n          <Grid.Row stretched>\n            {moredata.map((data, index) => {\n              return (\n                <React.Fragment key={index}>\n                  <Grid.Column only=\"computer\">\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"200px\", width: \"250px\" }}\n                        />\n                      ) : (\n                        \"Image NOT Available\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n                </React.Fragment>\n              );\n            })}\n          </Grid.Row>\n        </Grid>\n      );\n    }\n  };\n  render() {\n    const { books } = this.props.books;\n    var bookList;\n\n    if (books) {\n      if (books.results) {\n        if (books.results) {\n          books.results.map((data, index) =>\n            data.formats[\"text/html; charset=utf-8\"]\n              ? (bookAddress = data.formats[\"text/html; charset=utf-8\"])\n              : \"\"\n          );\n        }\n        bookList = (\n          <Grid columns={6}>\n            <Grid.Row stretched>\n              {books.results.map((data, index) => (\n                <React.Fragment key={index}>\n                  <Grid.Column only=\"computer\">\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"200px\", width: \"250px\" }}\n                        />\n                      ) : (\n                        \"NO\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n\n                  <Grid.Column only=\"mobile\" mobile={5}>\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"100px\", width: \"100px\" }}\n                        />\n                      ) : (\n                        \"NO\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n                </React.Fragment>\n              ))}\n              ;\n            </Grid.Row>\n          </Grid>\n        );\n      }\n    }\n\n    return (\n      <Container>\n        <SearchTool />\n        <h1>Humor</h1>\n        {bookList}\n        {this.renderMoreresult()}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          style={{ marginLeft: \"9px\" }}\n          onClick={this.searchReq}\n        >\n          Load More\n        </Button>\n        <br />\n        <br />\n        <br />\n        <br />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  books: state.books\n});\n\nexport default connect(\n  mapStateToProps,\n  { gethumorBooks }\n)(HumorBooks);\n","import React, { Component } from \"react\";\nimport { SERVER_ADDR, getFictionBooks } from \"../actions/bookAction\";\n\nimport { connect } from \"react-redux\";\n\nimport \"./homepage.css\";\nimport { Container, Button } from \"@material-ui/core\";\nimport { Grid, Image } from \"semantic-ui-react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SearchTool from \"./searchTool\";\nimport axios from \"axios\";\n\nvar count = 1;\nvar bookAddress;\nexport class Books extends Component {\n  constructor() {\n    super();\n    this.state = { books: [], moredata: {} };\n  }\n  componentDidMount() {\n    this.props.getFictionBooks();\n  }\n  searchReq = e => {\n    count += 1;\n    this.fetchMoreResult();\n    console.log(count);\n  };\n  fetchMoreResult = () => {\n    var urlLoad = `${SERVER_ADDR}/books?mime_type=image%2Fjpeg&page=${count}&topic=fiction`;\n\n    axios\n      .get(urlLoad)\n      .then(res => {\n        this.setState({ moredata: res.data.results });\n      })\n      .catch(error => {\n        if (axios.isCancel(error) || error) {\n          this.setState({ loading: false, message: \"failed to fetch\" });\n        }\n      });\n  };\n  renderMoreresult = () => {\n    const { moredata } = this.state;\n    if (Object.keys(moredata).length && moredata.length) {\n      moredata.map((data, index) =>\n        data.formats[\"text/html; charset=utf-8\"]\n          ? (bookAddress = data.formats[\"text/html; charset=utf-8\"])\n          : data.formats[\"application/pdf\"]\n          ? (bookAddress = data.formats[\"application/pdf\"])\n          : data.formats[\"text/plain; charset=us-ascii\"]\n      );\n      return (\n        <Grid columns={6}>\n          <Grid.Row stretched>\n            {moredata.map((data, index) => {\n              return (\n                <React.Fragment key={index}>\n                  <Grid.Column only=\"computer\">\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"200px\", width: \"250px\" }}\n                        />\n                      ) : (\n                        \"Image NOT Available\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n                </React.Fragment>\n              );\n            })}\n          </Grid.Row>\n        </Grid>\n      );\n    }\n  };\n  render() {\n    const { books } = this.props.books;\n    var bookList;\n\n    if (books) {\n      if (books.results) {\n        if (books.results) {\n          books.results.map((data, index) =>\n            data.formats[\"text/html; charset=utf-8\"]\n              ? (bookAddress = data.formats[\"text/html; charset=utf-8\"])\n              : \"\"\n          );\n        }\n        bookList = (\n          <Grid columns={6}>\n            <Grid.Row stretched>\n              {books.results.map((data, index) => (\n                <React.Fragment key={index}>\n                  <Grid.Column only=\"computer\">\n                    <Paper key={index}>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"200px\", width: \"250px\" }}\n                        />\n                      ) : (\n                        \"NO\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n                  <Grid.Column only=\"mobile\" mobile={5}>\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"100px\", width: \"100px\" }}\n                        />\n                      ) : (\n                        \"NO\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n                </React.Fragment>\n              ))}\n              ;\n            </Grid.Row>\n          </Grid>\n        );\n      }\n    }\n\n    return (\n      <Container>\n        <SearchTool />\n        <h1 className=\"headerClr\">FICTION</h1>\n\n        <div>{bookList}</div>\n        {this.renderMoreresult()}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          style={{ marginLeft: \"9px\" }}\n          onClick={this.searchReq}\n        >\n          Load More\n        </Button>\n        <br />\n        <br />\n        <br />\n        <br />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  books: state.books\n});\n\nexport default connect(\n  mapStateToProps,\n  { getFictionBooks }\n)(Books);\n","import React, { Component } from \"react\";\nimport { SERVER_ADDR, getpolitcsBooks } from \"../actions/bookAction\";\nimport { connect } from \"react-redux\";\n\nimport \"./homepage.css\";\nimport { Container, Button } from \"@material-ui/core\";\nimport { Grid, Image } from \"semantic-ui-react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SearchTool from \"./searchTool\";\nimport axios from \"axios\";\nvar count = 1;\nvar bookAddress;\nexport class PoliticsBooks extends Component {\n  constructor() {\n    super();\n    this.state = { books: [], moredata: {} };\n  }\n  componentDidMount() {\n    this.props.getpolitcsBooks();\n  }\n  searchReq = e => {\n    count += 1;\n    this.fetchMoreResult();\n    console.log(count);\n  };\n  fetchMoreResult = () => {\n    var urlLoad = `${SERVER_ADDR}/books?mime_type=image%2Fjpeg&page=${count}&topic=fiction`;\n\n    axios\n      .get(urlLoad)\n      .then(res => {\n        this.setState({ moredata: res.data.results });\n      })\n      .catch(error => {\n        if (axios.isCancel(error) || error) {\n          this.setState({ loading: false, message: \"failed to fetch\" });\n        }\n      });\n  };\n  renderMoreresult = () => {\n    const { moredata } = this.state;\n    if (Object.keys(moredata).length && moredata.length) {\n      moredata.map((data, index) =>\n        data.formats[\"text/html; charset=utf-8\"]\n          ? (bookAddress = data.formats[\"text/html; charset=utf-8\"])\n          : data.formats[\"application/pdf\"]\n          ? (bookAddress = data.formats[\"application/pdf\"])\n          : data.formats[\"text/plain; charset=us-ascii\"]\n      );\n      return (\n        <Grid columns={6}>\n          <Grid.Row stretched>\n            {moredata.map((data, index) => {\n              return (\n                <React.Fragment key={index}>\n                  <Grid.Column only=\"computer\">\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"200px\", width: \"250px\" }}\n                        />\n                      ) : (\n                        \"Image NOT Available\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n                </React.Fragment>\n              );\n            })}\n          </Grid.Row>\n        </Grid>\n      );\n    }\n  };\n  render() {\n    const { books } = this.props.books;\n    var bookList;\n\n    if (books) {\n      if (books.results) {\n        if (books.results) {\n          books.results.map((data, index) =>\n            data.formats[\"text/html; charset=utf-8\"]\n              ? (bookAddress = data.formats[\"text/html; charset=utf-8\"])\n              : \"\"\n          );\n        }\n        bookList = (\n          <Grid columns={6}>\n            <Grid.Row stretched>\n              {books.results.map((data, index) => (\n                <React.Fragment key={index}>\n                  <Grid.Column only=\"computer\">\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"200px\", width: \"250px\" }}\n                        />\n                      ) : (\n                        \"NO\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n\n                  <Grid.Column only=\"mobile\" mobile={5}>\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"100px\", width: \"100px\" }}\n                        />\n                      ) : (\n                        \"NO\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n                </React.Fragment>\n              ))}\n              ;\n            </Grid.Row>\n          </Grid>\n        );\n      }\n    }\n\n    return (\n      <Container>\n        <SearchTool />\n        <h1>Politics</h1>\n        {bookList}\n        {this.renderMoreresult()}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          style={{ marginLeft: \"9px\" }}\n          onClick={this.searchReq}\n        >\n          Load More\n        </Button>\n        <br />\n        <br />\n        <br />\n        <br />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  books: state.books\n});\n\nexport default connect(\n  mapStateToProps,\n  { getpolitcsBooks }\n)(PoliticsBooks);\n","import {\n  BOOK_LOADING,\n  GET_BOOK,\n  SHOW_BOOKS,\n  REMOVE_BOOK\n} from \"../actions/types\";\n\nconst initialState = {\n  book: null,\n  books: null,\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case BOOK_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case SHOW_BOOKS:\n      return {\n        ...state,\n        books: action.payload,\n        loading: false\n      };\n    case GET_BOOK:\n      return {\n        ...state,\n        book: action.payload,\n        loading: false\n      };\n    case REMOVE_BOOK:\n      return {\n        ...state,\n        books: state.books.filter(book => book.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport bookReducer from \"./bookReducer\";\n\nexport default combineReducers({\n  books: bookReducer\n});\n","export const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const GET_PROFILES = \"GET_PROFILES\";\nexport const GET_REPOS = \"GET_REPOS\";\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\nexport const PROFILE_ERROR = \"PROFIL_ERROR\";\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const REMOVE_BOOK = \"REMOVE_BOOK\";\nexport const GET_TRIGGERS = \"GET_TRIGGERS\";\nexport const GET_ACTIVITY = \"GET_ACTIVITY\";\nexport const GET_BOOKS = \"GETBOOKS\";\nexport const AUTH = \"AUTH\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const SHOW_BOOKS = \"SHOWBOOKS\";\nexport const BOOK_LOADING = \"BOOK_LOADING\";\nexport const GET_BOOK = \"GET_BOOK\";\nexport const CREATE_BOOK = \"CREATE_BOOK\";\nexport const CATEGORY = \"CATEGORY\";\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  applyMiddleware(...middleware)\n  // compose(\n  //   applyMiddleware(...middleware),\n  //   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  // )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { Link } from \"react-router-dom\";\nimport \"./homepage.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Grid } from \"semantic-ui-react\";\nexport class HomePage extends Component {\n  render() {\n    return (\n      <div>\n        <Container maxWidth=\"lg\" className=\"homePageContainer\">\n          <div>\n            <CardContent>\n              <h1 className=\"headingDiv\">Gutenberg Project</h1>\n            </CardContent>\n          </div>\n\n          <Grid columns=\"equal\">\n            <Grid.Column>\n              <Card style={{ height: \"150px\", width: \"300px\" }}>\n                <CardContent>\n                  <Link to={`/books`}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      fullWidth\n                      style={{ height: \"80px\", marginTop: \"18px\" }}\n                    >\n                      <span className=\"btn_text\">FICTION</span>\n                    </Button>\n                  </Link>\n                </CardContent>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card style={{ height: \"150px\", width: \"300px\" }}>\n                <CardContent>\n                  <Link to={`/dramabooks`}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      fullWidth\n                      style={{ height: \"80px\", marginTop: \"18px\" }}\n                    >\n                      <span className=\"btn_text\"> DRAMA</span>\n                    </Button>\n                  </Link>\n                </CardContent>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card style={{ height: \"150px\", width: \"300px\" }}>\n                <CardContent>\n                  <Link to={`/humorbooks`}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      fullWidth\n                      style={{ height: \"80px\", marginTop: \"18px\" }}\n                    >\n                      <span className=\"btn_text\"> HUMOR</span>\n                    </Button>\n                  </Link>\n                </CardContent>\n              </Card>\n            </Grid.Column>\n\n            <Grid.Column>\n              <Card style={{ height: \"150px\", width: \"300px\" }}>\n                <CardContent>\n                  <Link to={`/politcsbooks`}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      fullWidth\n                      style={{ height: \"80px\", marginTop: \"18px\" }}\n                    >\n                      <span className=\"btn_text\"> POLITICS</span>\n                    </Button>\n                  </Link>\n                </CardContent>\n              </Card>\n            </Grid.Column>\n            <Grid.Row />\n            <Grid.Row />\n            <Grid.Row />\n            <Grid.Row className=\"bottomRow\">\n              <Grid.Column>\n                <Card style={{ height: \"150px\", width: \"300px\" }}>\n                  <CardContent>\n                    <Link to={`/philosophybooks`}>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        fullWidth\n                        style={{ height: \"80px\", marginTop: \"18px\" }}\n                      >\n                        <span className=\"btn_text\"> PHILOSOPHY</span>\n                      </Button>\n                    </Link>\n                  </CardContent>\n                </Card>\n              </Grid.Column>\n              <Grid.Column>\n                <Card style={{ height: \"150px\", width: \"300px\" }}>\n                  <CardContent>\n                    <Link to={`/historybooks`}>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        fullWidth\n                        style={{ height: \"80px\", marginTop: \"18px\" }}\n                      >\n                        <span className=\"btn_text\"> HISTORY</span>\n                      </Button>\n                    </Link>\n                  </CardContent>\n                </Card>\n              </Grid.Column>\n              <Grid.Column>\n                <Card style={{ height: \"150px\", width: \"300px\" }}>\n                  <CardContent>\n                    <Link to={`/adventuresbooks`}>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        fullWidth\n                        style={{ height: \"80px\", marginTop: \"18px\" }}\n                      >\n                        <span className=\"btn_text\"> ADVENTURE</span>\n                      </Button>\n                    </Link>\n                  </CardContent>\n                </Card>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import { GET_ERRORS, SHOW_BOOKS } from \"./types\";\nimport axios from \"axios\";\n\n//export const SERVER_ADDR = 'https://gutendex.com';\nexport const SERVER_ADDR = 'http://skunkworks.ignitesol.com:8000';\n\nexport const getFictionBooks = () => dispatch => {\n  axios\n    .get(\n      `${SERVER_ADDR}/books/?topic=fiction&mime_type=image/jpeg`\n    )\n    .then(res => {\n      dispatch({\n        type: SHOW_BOOKS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data.message\n      });\n    });\n};\nexport const getdramaBooks = () => dispatch => {\n  axios\n    .get(\n      `${SERVER_ADDR}/books/?topic=drama&mime_type=image/jpeg`\n    )\n    .then(res => {\n      dispatch({\n        type: SHOW_BOOKS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data.message\n      });\n    });\n};\nexport const gethumorBooks = () => dispatch => {\n  axios\n    .get(\n      `${SERVER_ADDR}/books/?topic=humor&mime_type=image/jpeg`\n    )\n    .then(res => {\n      dispatch({\n        type: SHOW_BOOKS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data.message\n      });\n    });\n};\nexport const getpolitcsBooks = () => dispatch => {\n  axios\n    .get(\n      `${SERVER_ADDR}/books/?topic=politics&mime_type=image/jpeg`\n    )\n    .then(res => {\n      dispatch({\n        type: SHOW_BOOKS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data.message\n      });\n    });\n};\nexport const getHistoryBooks = () => dispatch => {\n  axios\n    .get(\n      `${SERVER_ADDR}/books/?topic=history&mime_type=image/jpeg`\n    )\n    .then(res => {\n      dispatch({\n        type: SHOW_BOOKS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data.message\n      });\n    });\n};\nexport const getPhilosophyBooks = () => dispatch => {\n  axios\n    .get(\n      `${SERVER_ADDR}/books/?topic=philosophy&mime_type=image/jpeg`\n    )\n    .then(res => {\n      dispatch({\n        type: SHOW_BOOKS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data.message\n      });\n    });\n};\nexport const getAdventuresBooks = () => dispatch => {\n  axios\n    .get(\n      `${SERVER_ADDR}/books/?topic=adventures&mime_type=image/jpeg`\n    )\n    .then(res => {\n      dispatch({\n        type: SHOW_BOOKS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data.message\n      });\n    });\n};\nexport const getallBooks = () => dispatch => {\n  axios\n    .get(`${SERVER_ADDR}/books/`)\n    .then(res => {\n      dispatch({\n        type: SHOW_BOOKS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data.message\n      });\n    });\n};\n","import React, { Component } from \"react\";\nimport { getPhilosophyBooks } from \"../actions/bookAction\";\nimport { connect } from \"react-redux\";\n\nimport \"./homepage.css\";\nimport { Container } from \"@material-ui/core\";\nimport { Grid, Image } from \"semantic-ui-react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SearchTool from \"./searchTool\";\nexport class PhilosophyBooks extends Component {\n  constructor() {\n    super();\n    this.state = { books: [] };\n  }\n  componentDidMount() {\n    this.props.getPhilosophyBooks();\n  }\n\n  render() {\n    const { books } = this.props.books;\n    var bookList;\n    var bookAddress;\n    if (books) {\n      if (books.results) {\n        if (books.results) {\n          books.results.map((data, index) =>\n            data.formats[\"text/html; charset=utf-8\"]\n              ? (bookAddress = data.formats[\"text/html; charset=utf-8\"])\n              : \"\"\n          );\n        }\n        bookList = (\n          <Grid columns={6}>\n            <Grid.Row stretched>\n              {books.results.map((data, index) => (\n                <React.Fragment key={index}>\n                  <Grid.Column only=\"computer\">\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"200px\", width: \"250px\" }}\n                        />\n                      ) : (\n                        \"NO\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n\n                  <Grid.Column only=\"mobile\" mobile={5}>\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"100px\", width: \"100px\" }}\n                        />\n                      ) : (\n                        \"NO\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n                </React.Fragment>\n              ))}\n              ;\n            </Grid.Row>\n          </Grid>\n        );\n      }\n    }\n\n    return (\n      <Container>\n        <SearchTool />\n        <h1>Philosophy</h1>\n\n        {bookList}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  books: state.books\n});\n\nexport default connect(\n  mapStateToProps,\n  { getPhilosophyBooks }\n)(PhilosophyBooks);\n","import React, { Component } from \"react\";\nimport { getHistoryBooks } from \"../actions/bookAction\";\nimport { connect } from \"react-redux\";\n\nimport \"./homepage.css\";\nimport { Container } from \"@material-ui/core\";\nimport { Grid, Image } from \"semantic-ui-react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SearchTool from \"./searchTool\";\nexport class HistoryBooks extends Component {\n  constructor() {\n    super();\n    this.state = { books: [] };\n  }\n  componentDidMount() {\n    this.props.getHistoryBooks();\n  }\n\n  render() {\n    const { books } = this.props.books;\n    var bookList;\n    var bookAddress;\n    if (books) {\n      if (books.results) {\n        if (books.results) {\n          books.results.map((data, index) =>\n            data.formats[\"text/html; charset=utf-8\"]\n              ? (bookAddress = data.formats[\"text/html; charset=utf-8\"])\n              : \"\"\n          );\n        }\n        bookList = (\n          <Grid columns={6}>\n            <Grid.Row stretched>\n              {books.results.map((data, index) => (\n                <React.Fragment key={index}>\n                  <Grid.Column only=\"computer\">\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"200px\", width: \"250px\" }}\n                        />\n                      ) : (\n                        \"NO\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n\n                  <Grid.Column only=\"mobile\" mobile={5}>\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"100px\", width: \"100px\" }}\n                        />\n                      ) : (\n                        \"NO\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n                </React.Fragment>\n              ))}\n              ;\n            </Grid.Row>\n          </Grid>\n        );\n      }\n    }\n\n    return (\n      <Container>\n        <SearchTool />\n        <h1>History</h1>\n\n        {bookList}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  books: state.books\n});\n\nexport default connect(\n  mapStateToProps,\n  { getHistoryBooks }\n)(HistoryBooks);\n","import React, { Component } from \"react\";\nimport { getAdventuresBooks } from \"../actions/bookAction\";\nimport { connect } from \"react-redux\";\n\nimport \"./homepage.css\";\nimport { Container } from \"@material-ui/core\";\nimport { Grid, Image } from \"semantic-ui-react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SearchTool from \"./searchTool\";\n\nexport class AdventuresBooks extends Component {\n  constructor() {\n    super();\n    this.state = { books: [] };\n  }\n  componentDidMount() {\n    this.props.getAdventuresBooks();\n  }\n\n  render() {\n    const { books } = this.props.books;\n    var bookList;\n    var bookAddress;\n    if (books) {\n      if (books.results) {\n        if (books.results) {\n          books.results.map((data, index) =>\n            data.formats[\"text/html; charset=utf-8\"]\n              ? (bookAddress = data.formats[\"text/html; charset=utf-8\"])\n              : \"\"\n          );\n        }\n        bookList = (\n          <Grid columns={6}>\n            <Grid.Row stretched>\n              {books.results.map((data, index) => (\n                <React.Fragment key={index}>\n                  <Grid.Column only=\"computer\">\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"200px\", width: \"250px\" }}\n                        />\n                      ) : (\n                        \"NO\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n                  <Grid.Column only=\"mobile\" mobile={5}>\n                    <Paper>\n                      {data.formats[\"image/jpeg\"] ? (\n                        <Image\n                          src={data.formats[\"image/jpeg\"]}\n                          style={{ height: \"100px\", width: \"100px\" }}\n                        />\n                      ) : (\n                        \"NO\"\n                      )}\n                      {\n                        <a href={bookAddress}>\n                          <h5>{data.title}</h5>\n                        </a>\n                      }\n                    </Paper>\n                    <br />\n                    <br />\n                    <br />\n                  </Grid.Column>\n                </React.Fragment>\n              ))}\n              ;\n            </Grid.Row>\n          </Grid>\n        );\n      }\n    }\n\n    return (\n      <Container>\n        <SearchTool />\n        <h1>Adventures</h1>\n\n        {bookList}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  books: state.books\n});\n\nexport default connect(\n  mapStateToProps,\n  { getAdventuresBooks }\n)(AdventuresBooks);\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport HomePage from \"./component/homePage\";\nimport DramaBooks from \"./component/dramaBooks\";\nimport HumorBooks from \"./component/humorBooks\";\nimport Books from \"./component/books\";\nimport PoliticsBooks from \"./component/politcsBooks\";\nimport PhilosophyBooks from \"./component/philosophy\";\nimport HistoryBooks from \"./component/historyBooks\";\nimport AdventuresBooks from \"./component/adventuresBooks\";\n\nfunction App() {\n  return (\n    <div>\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/books\" component={Books} />\n          </Switch>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n          </Switch>\n          <Switch>\n            <Route exact path=\"/dramabooks\" component={DramaBooks} />\n          </Switch>\n          <Switch>\n            <Route exact path=\"/humorbooks\" component={HumorBooks} />\n          </Switch>\n          <Switch>\n            <Route exact path=\"/politcsbooks\" component={PoliticsBooks} />\n          </Switch>\n          <Switch>\n            <Route exact path=\"/philosophybooks\" component={PhilosophyBooks} />\n          </Switch>\n          <Switch>\n            <Route exact path=\"/historybooks\" component={HistoryBooks} />\n          </Switch>\n          <Switch>\n            <Route exact path=\"/adventuresbooks\" component={AdventuresBooks} />\n          </Switch>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}